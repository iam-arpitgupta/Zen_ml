1. Create a github repos and setup locally.
2. Create a virtual environment named 'zenml' - conda create -n zenml python=3.10
3. Activate the virtual environment - conda activate zenml
   copy the provided requirements.txt, pyproject.toml, setup.py files
   Do "pip install -r requirements.txt"
4. Create a template.py file for project file setup.
5. Run template.py file to create project structure.
6. Optionally you can also run testEnvironment.py. Which creates venv and install dependencies from requirements.txt file.
7. Add code to config.yaml file for the artifacts file path.
   Also add code inside src to these sub folder/files -> logger, exception, config, constants
8. In the components/data_ingestion.py has code for data_ingestion(data downloaded from google drive). 
9. Similarly components/data_processing.py file has data_preprocessing logic and save the data for model_training.
   Now components/model_training.py logic in which column transformer technique is used and the best performing model is saved.
10. Add code to app.py and run.
   

-> Setup ZenMl

2. Run {cmd: $ zenml login --local}.
3. Run {cmd: $ export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES zenml up}. For exposing UI on the browser.
4. Sign up your ZenMl dashboard.


$env:OBJC_DISABLE_INITIALIZE_FORK_SAFETY="YES"; zenml up --blocking